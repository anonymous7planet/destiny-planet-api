repositories {
    /** 가장 기본 메이븐 레파지토리 */
    mavenCentral()
}

dependencies {
    // spring boot basic
    implementation 'org.springframework.boot:spring-boot-starter'
    implementation 'org.springframework.boot:spring-boot-starter-tomcat'
//    implementation 'org.springframework.boot:spring-boot-starter-log4j2'


    // spring data jpa
//    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'

    // spring security
    implementation 'org.springframework.boot:spring-boot-starter-security'

    // spring boot mybatis
//    implementation 'org.mybatis.spring.boot:mybatis-spring-boot-starter:2.1.3'
    
//    implementation 'org.springframework.boot:spring-boot-starter-validation'
    
    // Spring Cloud
    
    // Spring Cloud Bootstrap
    // 현재 사용 용도는 마이크로 서비스 모듈에서 컨피그 서버 정보를 유레카 서버에 등록된 서비스 아이디로 설정하기 위해서 사용
//    implementation 'org.springframework.cloud:spring-cloud-starter-bootstrap'

    // Spring Cloud Config Client
//    implementation 'org.springframework.cloud:spring-cloud-starter-config'

    // Spring Cloud Eureka Client
//    implementation 'org.springframework.cloud:spring-cloud-starter-netflix-eureka-client'

    // Spring Cloud Starter Actuator
    // health 및 refresh 처리를 위해 필요한 monitor dependency가 있다면, actuator의 refresh나 bus-refresh는 사용하지 않음
//    implementation 'org.springframework.boot:spring-boot-starter-actuator'

    // Spring Cloud Starter Bus Kafka
    // Kafak로 bus-refresh 메세지를 전송하여 Config Client들에게 모두 변경된 설정 정보가 적용될 수 있도록 한다.
//    implementation 'org.springframework.cloud:spring-cloud-starter-bus-kafka'

//    implementation 'org.springframework.cloud:spring-cloud-starter-stream-kafka'

    // https://mvnrepository.com/artifact/org.springframework.cloud/spring-cloud-starter-openfeign
//    implementation group: 'org.springframework.cloud', name: 'spring-cloud-starter-openfeign'


    // Spring Cloud Starter Bus AMQP
//    implementation 'org.springframework.cloud:spring-cloud-starter-bus-amqp'

    // validation
//    implementation 'org.hibernate.validator:hibernate-validator:7.0.1.Final'

    // JWT 관련 의존성
//    implementation 'io.jsonwebtoken:jjwt-api:0.11.2'
//    runtimeOnly group: 'io.jsonwebtoken', name: 'jjwt-impl', version: '0.11.2'
//    runtimeOnly group: 'io.jsonwebtoken', name: 'jjwt-jackson', version: '0.11.2'

    // json lib
    implementation 'com.google.code.gson:gson:2.8.6'
    implementation 'com.googlecode.json-simple:json-simple:1.1.1'
    implementation group: 'org.json', name: 'json', version: '20210307'
    implementation group: 'org.jsoup', name: 'jsoup', version: '1.13.1'

    // Firebase
    implementation 'com.google.firebase:firebase-admin:7.1.1'

    // Email
    implementation group: 'org.springframework.boot', name: 'spring-boot-starter-mail'
    // Email template로 html을 쓰기 위해서 추가
    implementation group: 'org.springframework.boot', name: 'spring-boot-starter-thymeleaf'

    // Mapstruct
    implementation "org.mapstruct:mapstruct:1.4.2.Final"
    implementation "org.mapstruct:mapstruct-processor:1.4.2.Final"
    annotationProcessor "org.mapstruct:mapstruct-processor:1.4.2.Final"

    // lombok
    compileOnly 'org.projectlombok:lombok'
    annotationProcessor 'org.projectlombok:lombok'
    annotationProcessor 'org.springframework.boot:spring-boot-configuration-processor'

    // mysql connector

//    runtimeOnly 'mysql:mysql-connector-java'



    // query dsl
//    implementation "com.querydsl:querydsl-apt"
//    implementation "com.querydsl:querydsl-jpa"

    // file upload
    implementation "commons-fileupload:commons-fileupload:1.3.2"
    implementation "commons-io:commons-io:2.5"

    // swagger- springfox-boot-starter안에 모든 라이브러리 다 포함되어있음
//    implementation "io.springfox:springfox-boot-starter:3.0.0"
//    implementation 'com.spring4all:swagger-spring-boot-starter:2.0.1.RELEASE'
//    implementation "io.springfox:springfox-swagger-ui:3.0.0"

    // quartz
//    implementation "org.springframework.boot:spring-boot-starter-quartz"

    // websocket
    implementation "org.springframework.boot:spring-boot-starter-websocket"

    // redis
    implementation "org.springframework.boot:spring-boot-starter-data-redis"

    // embedded redis server
    implementation "it.ozimov:embedded-redis:0.7.2"

    // joda-time
    implementation group: 'joda-time', name: 'joda-time', version: '2.10.10'
    
    // jasypt 
    implementation group: 'com.github.ulisesbocchio', name: 'jasypt-spring-boot-starter', version: '3.0.3'

    // logging yml파일에 설정을 위해 필요
    // implementation group: 'com.fasterxml.jackson.dataformat', name: 'jackson-dataformat-yaml', version: '2.12.3'

    implementation 'org.hibernate:hibernate-java8:5.1.0.Final'

    // webClient
    implementation 'org.springframework.boot:spring-boot-starter-webflux'
    implementation 'org.projectreactor:reactor-spring:1.0.1.RELEASE'

    // Test
//    testImplementation group: 'org.junit.jupiter', name: 'junit-jupiter-api', version: '5.6.2'
//    testRuntimeOnly group: 'org.junit.jupiter', name: 'junit-jupiter-engine', version: '5.6.2'
//
//    testCompileOnly 'org.projectlombok:lombok'
//    testAnnotationProcessor 'org.projectlombok:lombok'
}

//configurations {
//    all{
//        // logback 의존성 제거
//        // log4j2 의존성을 추가하기 위해서는 logback 제거 필요, 미 제거시 multiple binding error 발생
//        exclude group : 'org.springframework.boot', module :'spring-boot-starter-logging'
//    }
//}