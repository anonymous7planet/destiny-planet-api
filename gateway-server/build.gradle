jar {
    enabled = false
}

dependencies {

    /**
     * Spring Cloud Config
     */
    // Spring Cloud Config Client
    implementation 'org.springframework.cloud:spring-cloud-starter-config'

    /**
     * Spring Cloud Eureka
     */
    // Spring Cloud Eureka Client
    implementation 'org.springframework.cloud:spring-cloud-starter-netflix-eureka-client'

    /**
     * Spring Cloud Gateway
     */
    // Spring Cloud Gateway를 위한 라이브러리
    implementation 'org.springframework.cloud:spring-cloud-starter-gateway'

    /**
     * Spring Cloud Bus
     */
    // Spring Cloud Starter Bus Kafka
    // Kafak로 bus-refresh 메세지를 전송하여 Config Client들에게 모두 변경된 설정 정보가 적용될 수 있도록 한다.
    implementation 'org.springframework.cloud:spring-cloud-starter-bus-kafka'

    implementation 'org.springframework.cloud:spring-cloud-starter-stream-kafka'

    /**
     * Spring Cloud 기타 사용
     */
    // Spring Cloud Bootstrap
    // 현재 사용 용도는 마이크로 서비스 모듈에서 컨피그 서버 정보를 유레카 서버에 등록된 서비스 아이디로 설정하기 위해서 사용
    implementation 'org.springframework.cloud:spring-cloud-starter-bootstrap'

    // netflix에서 Circuit Breaker Pattern을 구현한 라이브러리.
    // MSA에서 장애 전파를 방지해주는 역할을 수행한다.
    // 하지만 hystrix github에 가보면 더이상 개발하지 않고 유지보수만 진행, resilience4j를 사용하기를 추천
    implementation 'org.springframework.cloud:spring-cloud-starter-netflix-hystrix:2.2.10.RELEASE'

    // Spring Cloud Starter Actuator
    // health 및 refresh 처리를 위해 필요한 monitor dependency가 있다면, actuator의 refresh나 bus-refresh는 사용하지 않음
    implementation 'org.springframework.boot:spring-boot-starter-actuator'

    /**
     * JWT관련 의존성
     */
    implementation 'io.jsonwebtoken:jjwt-api:0.11.2'
    runtimeOnly group: 'io.jsonwebtoken', name: 'jjwt-impl', version: '0.11.2'
    runtimeOnly group: 'io.jsonwebtoken', name: 'jjwt-jackson', version: '0.11.2'

    // lombok
    compileOnly 'org.projectlombok:lombok'
    annotationProcessor 'org.projectlombok:lombok'
    annotationProcessor 'org.springframework.boot:spring-boot-configuration-processor'
}
